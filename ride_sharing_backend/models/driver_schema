// user.js
const Mongoose = require("mongoose")
const bcrypt = require('bcrypt');
const driverSchema = new Mongoose.Schema({
  username: {
    type: String,
    required: true,
  },
  phoneNumber: {
    type: String,
    required: [true, 'User phone number required'],
    unique: true,
  },
  email: {
    type: String,
    required: true,
    unique: true,
  },
  password: {
    type: String,
    minlength: 6,
    required: true,
  },
   city:{
    type : String,
    required: true,
   },
   rideId: {
    type: Mongoose.Schema.Types.ObjectId,
    ref: 'Ride' // Reference to the 'Ride' collection
  },
  
  driverOfferId: {
    type: Mongoose.Schema.Types.ObjectId,
    ref: 'driverOffer' 
  }
});
driverSchema.pre('save', async function(next) {
  const driver = this;
 
  const salt = await bcrypt.genSalt(10);
  const hash = await bcrypt.hash(driver.password, salt);
  
  driver.password = hash;
  next();
});
const driver = Mongoose.model('driver', driverSchema);

module.exports = driver;